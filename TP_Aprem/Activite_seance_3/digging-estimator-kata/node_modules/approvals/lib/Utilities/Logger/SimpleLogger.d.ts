import { Wrapper } from "./Wrapper";
import { LoggingInstance } from "./LoggingInstance";
import { StringWrapper } from "./StringWrapper";
export declare class SimpleLogger {
    static _wrapper: Wrapper<LoggingInstance>;
    static showQueries(show: boolean): void;
    static showMarkers(show: boolean): void;
    static showEvents(show: boolean): void;
    static showMessages(show: boolean): void;
    static showVariables(show: boolean): void;
    static showHourglass(show: boolean): void;
    static registerLogger(log_method: (text: string) => void): void;
    static logToString(): StringWrapper;
    static useMarkers<T>(code: () => T, parameters?: (string | (() => string)), logReturnValue?: boolean): T;
    static variable(name: string, value: any, show_types?: boolean): void;
    static hourglass(): void;
    static showAll(show: boolean): void;
    static event(text: string): void;
    static query(queryText: string): void;
    static message(messageText: string): void;
    static warning(exception: string | Error): void;
    static showTimestamps(show: boolean): void;
}
