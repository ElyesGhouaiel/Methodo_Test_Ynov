import { StringWrapper } from "./StringWrapper";
export declare class LoggingInstance {
    logger: (text: string) => void;
    private counter;
    private tabs;
    private toggles;
    logStackTraces: boolean;
    private logWithTimestamps;
    timer: () => Date;
    private previousTimestamp;
    constructor();
    logToString(): StringWrapper;
    useMarkers<T>(additional_stack: number, code: () => T, parameters?: string | (() => string), logReturnValue?: boolean): T;
    variable(name: string, value: any, showTypes: boolean): void;
    private logLine;
    private getTabs;
    private withTabbing;
    hourglass(): void;
    showAll(show: boolean): void;
    event(event_name: string): void;
    showQueries(show: boolean): void;
    showMarkers(show: boolean): void;
    showEvents(show: boolean): void;
    showMessages(show: boolean): void;
    showVariables(show: boolean): void;
    showHourglass(show: boolean): void;
    warning(exception: Error | string): void;
    query(queryText: string): void;
    message(messageText: string): void;
    showTimestamps(show: boolean): void;
    private getTimestamp;
}
